{
    "docs": [
        {
            "location": "/", 
            "text": "Welcome\n\n\nLoopring is a project for decentralized ERC20 token exchange. The first public blockchain Loopring supports will be Ethereum, but other blockchains with smart contract capability can also be supported in a similar way, such as NEO, Qtum, and EOS. To have an overview of Loopring, please visit our website - \nhttps://loopring.org\n.\n\n\nLoopring is not a decentralized exchange per se, as all building blocks of a traditional exchange are dissembled and put together again as different roles in a decentralized environment. These roles include, but may not be limited to, wallets, relays, orderbook browsers, ring-miners, and asset tokenization services. Some of those roles are described in \nOverview\n.\n\n\nThis website consists of documents regarding many aspect of Loopring project and its sub-projects. This documentation sub-project is a on-going effort, we need and welcome contributions from the community. If you want to offer help, please join us on \nSlack\n and read the \nHow to contribute\n section; if you ever offered any help, please feel free to add your name to the \nContributors\n section, it's our honor to have you there.", 
            "title": "About"
        }, 
        {
            "location": "/#welcome", 
            "text": "Loopring is a project for decentralized ERC20 token exchange. The first public blockchain Loopring supports will be Ethereum, but other blockchains with smart contract capability can also be supported in a similar way, such as NEO, Qtum, and EOS. To have an overview of Loopring, please visit our website -  https://loopring.org .  Loopring is not a decentralized exchange per se, as all building blocks of a traditional exchange are dissembled and put together again as different roles in a decentralized environment. These roles include, but may not be limited to, wallets, relays, orderbook browsers, ring-miners, and asset tokenization services. Some of those roles are described in  Overview .  This website consists of documents regarding many aspect of Loopring project and its sub-projects. This documentation sub-project is a on-going effort, we need and welcome contributions from the community. If you want to offer help, please join us on  Slack  and read the  How to contribute  section; if you ever offered any help, please feel free to add your name to the  Contributors  section, it's our honor to have you there.", 
            "title": "Welcome"
        }, 
        {
            "location": "/overview/", 
            "text": "What is Loopring\n\n\nLoopring is a decentralized token exchange protocol. It is implemented as an ethereum smart-contract at the core of the loopring decentralized exchange system. Its design allows for several improvements over traditional centralized exchanges:\n\n\n\n\nZero Risks Trading:\n The tokens stay in the user's wallet and are never locked by orders.\n\n\nHigh liquidity:\n Orders are ring-matched allowing for high liquidity on any trading pair.\n\n\nFairness:\n The fee \n discount model allows for fairness between all parties involved (Makers, Takers and Miners).\n\n\nWeak Supervision:\n The whole system is completely decentralised.\n\n\n\n\nYou can learn more about the background and general design of the loopring protocol in our \nwhitepaper\n.\nBear in mind that as we proceed with the implementation, some details in the whitepaper might become outdated. Whenever there is a difference, please refer to this website as the latest official update.\n\n\nWhy ?\n\n\nThe loopring protocol was designed to address numerous issues found in centralized exchanges, for a brief explanation checkout the \nlast section\n of this page.\n\n\nEcosystem\n\n\nThis section introduces the key parts of the loopring ecosystem and how they interact with each other. They jointly provide all functionalities a centralized exchange has to offer. For a more in depth explanation of each one of them, follow the links below.\n\n\nWallets\n\n\n\n\nA common wallet service/interface that gives you access to your tokens and provides you with a way to send orders to the loopring network.\n\n\n\n\nRelays\n\n\n\n\nMaintains public orderbooks and trade history. Broadcasts new orders to other relays and ring miners.\n\n\n\n\nRing Miners\n\n\n\n\nTries to determine a way to fulfill received orders by ring-matching them. This is computational heavy and is done completly off-chain. The process produces chains of trades involving at least 2 tokens, we call that an \norder ring\n.\n\n\n\n\nLoopring Protocol Smart Contracts\n\n\n\n\nA set of smart contracts that checks ring-matched orders received from the miners, do the token transfers on behalf of the users, incentivize the miners and emit events. The relays/order browsers listen to these events to keep their orderbooks and trade history up to date.\n\n\n\n\nAsset Tokenization Services\n\n\n\n\nA bridge between assets that cannot be directly traded on loopring. They are centralized services ran by trustworthy companies or organisations. A user could deposit his assets (fiat or tokens from other chains) and get tokens issued. By returning the tokens the user get backs his deposit. LRC is not a cross-chain exchange protocol, but with Asset Tokenization Services, it is possible to trade Ethereum ERC20 tokens with physicial assets as well as assets on other blockchains.\n\n\nAsset Tokenization Services is not part of Loopring project though.\n\n\n\n\nOverview\n\n\nThis is the lifecycle of a successful order on the loopring network with an explanation of each step bellow.\n\n\n\n0 - The user wants to make a trade\n\n\n\n\nThe user wants to exchange \nX\n amount of \nTokenA\n for \nY\n amount of \nTokenB\n. The current rate and orderbook for this pair can be found on multiple sources provided by the relays or any other interface hooked up on the network (e.g. orderbook browsers). Once he is ready, he uses his wallet interface to enter the details of his order and submits it. An amount of LRC can be added to the order as a fee for miners. Orders with a higher LRC fee have a better chance to be processed earlier by miners.\n\n\n\n\n1 - ERC20 Authorization\n\n\n\n\nThe wallet authorizes the loopring smart contracts to handle \nX\n amount of the \nTokenA\n the user wants to sell. This does not lock the user's tokens. He is free to move them while the order is being processed by the network. If the sender's balance is being checked at some point (by a miner or the loopring ) and the funds are insufficient, it will be considered scaled-down. A order being scaled-down is not the same as being cancelled, a scaled-down order will be automatically scaled up to its original size if funds sufficient are deposited to its address, while cancellation is a one way manual operation and cannot be revert.\n\n\n\n\n2 - Sending the order to the network\n\n\n\n\nOnce the authorization is made, the order's data is signed with the private key of the sender. Then, the wallet sends the order along with its signature to one or more nodes in the network (relay or ring-miner).\n\n\n\n\n3 - Broadcast\n\n\n\n\nOn the reception of the order, relays update their public orderbook and broadcast the order to other relays as well as ring miners to start the order processing as quickly as possible.\n\n\n\n\n4 - Ring Miners (order matching)\n\n\n\n\nRing Miners receive the order and add it to their orderbook. Each one of them tries to fill it fully or partially at the given exchange rate or better by ring-matching it with multiple other orders. The ring-matching is the main reason why the protocol is able to provide high liquidity over any pair. The details of the process are explained in the \nRing Miners\n page.\nIf the rate is better than the rate the user asked for, the savings are shared amongst all the orders in the ring and is called the Margin Split. For his fee the miner can choose between claiming the Margin Split and give back the LRC to the user or just keep the LRC fee.\n\n\n\n\n5 - Validation \n Settlement\n\n\n\n\nThe ring is received by the loopring protocol contract. It makes multiple checks to verify the miner's supplied datas and determine if the ring can be settled fully or partially (depending on the fill rate of the orders in the ring and the tokens in the users wallets). If all checks are successful, the contract makes the token tranfers to the users (5a) and pays the miner's fees (5b) at the same time. This operation is atomic.\n\n\n\n\nSome details were ommited to ease the understanding of what is happening when an order enters the loopring network. To deepen your understanding of the protocol (order cancelling, ring-matching, orderbooks and trade history synching, etc...) we advise you to take a look at the documentation of the key parts of the ecosystem \nlisted above\n.\n\n\nIssues with centralized exchanges\n\n\nTo better understand the need of a system such as loopring, we first need to point the issues in the centralized exchanges model.\n\n\nHere is a very simplified view of what happens when you send your tokens to a centralized exchange.\n\n\n\n\nIn order to use the exchange and trade your tokens, you first have to deposit your tokens in the exchange. Your tokens are sent to the exchange's wallets and it gives you back an IOU (I owe you), which is a proof of debt. Then you trade your IOU with other users IOUs. Finally when you want to withdraw, you give back your IOU to the exchange which then sends you back your tokens to your external wallet address.\n\n\nLack of Security\n\n\n\n\nIn this model, you don't have control over your tokens. It allows for instant transactions on the exchange but it comes with a lot of risks. There are multiple scenarios where you could loose your money (frozen account, exchange shutting down, hacking, developer's mistakes, etc...).\n\n\n\n\nLack of Transparency\n\n\n\n\nAnything can happen to your tokens when they are on the exchange's wallets. You have no way of knowing what exactly. It is always too late when an exchange goes bankrupt and users never see it coming.\n\n\n\n\nLack of Liquidity\n\n\n\n\nYou are only able to trade with the exchange own order pools and supported token pairs. If there is not enough volume you can try on an other exchange and if the token pair you want to trade is not supported, you could try making indirect trades with other pairs to get what you want or, again, transfer your funds to an other exchange. Either way you get hit multiple times by fees and you loose money.\n\n\n\n\nThere are other challenges faced by centralized exchanges. We won't discuss them all here and we advise you to read the many articles written on the subject across the web.", 
            "title": "Overview"
        }, 
        {
            "location": "/overview/#what-is-loopring", 
            "text": "Loopring is a decentralized token exchange protocol. It is implemented as an ethereum smart-contract at the core of the loopring decentralized exchange system. Its design allows for several improvements over traditional centralized exchanges:   Zero Risks Trading:  The tokens stay in the user's wallet and are never locked by orders.  High liquidity:  Orders are ring-matched allowing for high liquidity on any trading pair.  Fairness:  The fee   discount model allows for fairness between all parties involved (Makers, Takers and Miners).  Weak Supervision:  The whole system is completely decentralised.   You can learn more about the background and general design of the loopring protocol in our  whitepaper .\nBear in mind that as we proceed with the implementation, some details in the whitepaper might become outdated. Whenever there is a difference, please refer to this website as the latest official update.", 
            "title": "What is Loopring"
        }, 
        {
            "location": "/overview/#why", 
            "text": "The loopring protocol was designed to address numerous issues found in centralized exchanges, for a brief explanation checkout the  last section  of this page.", 
            "title": "Why ?"
        }, 
        {
            "location": "/overview/#ecosystem", 
            "text": "This section introduces the key parts of the loopring ecosystem and how they interact with each other. They jointly provide all functionalities a centralized exchange has to offer. For a more in depth explanation of each one of them, follow the links below.  Wallets   A common wallet service/interface that gives you access to your tokens and provides you with a way to send orders to the loopring network.   Relays   Maintains public orderbooks and trade history. Broadcasts new orders to other relays and ring miners.   Ring Miners   Tries to determine a way to fulfill received orders by ring-matching them. This is computational heavy and is done completly off-chain. The process produces chains of trades involving at least 2 tokens, we call that an  order ring .   Loopring Protocol Smart Contracts   A set of smart contracts that checks ring-matched orders received from the miners, do the token transfers on behalf of the users, incentivize the miners and emit events. The relays/order browsers listen to these events to keep their orderbooks and trade history up to date.   Asset Tokenization Services   A bridge between assets that cannot be directly traded on loopring. They are centralized services ran by trustworthy companies or organisations. A user could deposit his assets (fiat or tokens from other chains) and get tokens issued. By returning the tokens the user get backs his deposit. LRC is not a cross-chain exchange protocol, but with Asset Tokenization Services, it is possible to trade Ethereum ERC20 tokens with physicial assets as well as assets on other blockchains.  Asset Tokenization Services is not part of Loopring project though.", 
            "title": "Ecosystem"
        }, 
        {
            "location": "/overview/#overview", 
            "text": "This is the lifecycle of a successful order on the loopring network with an explanation of each step bellow.  0 - The user wants to make a trade   The user wants to exchange  X  amount of  TokenA  for  Y  amount of  TokenB . The current rate and orderbook for this pair can be found on multiple sources provided by the relays or any other interface hooked up on the network (e.g. orderbook browsers). Once he is ready, he uses his wallet interface to enter the details of his order and submits it. An amount of LRC can be added to the order as a fee for miners. Orders with a higher LRC fee have a better chance to be processed earlier by miners.   1 - ERC20 Authorization   The wallet authorizes the loopring smart contracts to handle  X  amount of the  TokenA  the user wants to sell. This does not lock the user's tokens. He is free to move them while the order is being processed by the network. If the sender's balance is being checked at some point (by a miner or the loopring ) and the funds are insufficient, it will be considered scaled-down. A order being scaled-down is not the same as being cancelled, a scaled-down order will be automatically scaled up to its original size if funds sufficient are deposited to its address, while cancellation is a one way manual operation and cannot be revert.   2 - Sending the order to the network   Once the authorization is made, the order's data is signed with the private key of the sender. Then, the wallet sends the order along with its signature to one or more nodes in the network (relay or ring-miner).   3 - Broadcast   On the reception of the order, relays update their public orderbook and broadcast the order to other relays as well as ring miners to start the order processing as quickly as possible.   4 - Ring Miners (order matching)   Ring Miners receive the order and add it to their orderbook. Each one of them tries to fill it fully or partially at the given exchange rate or better by ring-matching it with multiple other orders. The ring-matching is the main reason why the protocol is able to provide high liquidity over any pair. The details of the process are explained in the  Ring Miners  page.\nIf the rate is better than the rate the user asked for, the savings are shared amongst all the orders in the ring and is called the Margin Split. For his fee the miner can choose between claiming the Margin Split and give back the LRC to the user or just keep the LRC fee.   5 - Validation   Settlement   The ring is received by the loopring protocol contract. It makes multiple checks to verify the miner's supplied datas and determine if the ring can be settled fully or partially (depending on the fill rate of the orders in the ring and the tokens in the users wallets). If all checks are successful, the contract makes the token tranfers to the users (5a) and pays the miner's fees (5b) at the same time. This operation is atomic.   Some details were ommited to ease the understanding of what is happening when an order enters the loopring network. To deepen your understanding of the protocol (order cancelling, ring-matching, orderbooks and trade history synching, etc...) we advise you to take a look at the documentation of the key parts of the ecosystem  listed above .", 
            "title": "Overview"
        }, 
        {
            "location": "/overview/#issues-with-centralized-exchanges", 
            "text": "To better understand the need of a system such as loopring, we first need to point the issues in the centralized exchanges model.  Here is a very simplified view of what happens when you send your tokens to a centralized exchange.   In order to use the exchange and trade your tokens, you first have to deposit your tokens in the exchange. Your tokens are sent to the exchange's wallets and it gives you back an IOU (I owe you), which is a proof of debt. Then you trade your IOU with other users IOUs. Finally when you want to withdraw, you give back your IOU to the exchange which then sends you back your tokens to your external wallet address.  Lack of Security   In this model, you don't have control over your tokens. It allows for instant transactions on the exchange but it comes with a lot of risks. There are multiple scenarios where you could loose your money (frozen account, exchange shutting down, hacking, developer's mistakes, etc...).   Lack of Transparency   Anything can happen to your tokens when they are on the exchange's wallets. You have no way of knowing what exactly. It is always too late when an exchange goes bankrupt and users never see it coming.   Lack of Liquidity   You are only able to trade with the exchange own order pools and supported token pairs. If there is not enough volume you can try on an other exchange and if the token pair you want to trade is not supported, you could try making indirect trades with other pairs to get what you want or, again, transfer your funds to an other exchange. Either way you get hit multiple times by fees and you loose money.   There are other challenges faced by centralized exchanges. We won't discuss them all here and we advise you to read the many articles written on the subject across the web.", 
            "title": "Issues with centralized exchanges"
        }, 
        {
            "location": "/token/", 
            "text": "Trend\n\n\n\n\n\n\n\n\nTo learn more about LRC token, checkout \nhttps://etherscan.io/address/lrctoken.eth\n or \n\nhttps://etherscan.io/token/0xEF68e7C694F40c8202821eDF525dE3782458639f\n.\n\n\nCirculating Supply\n\n\nAfter the refunding effort to our Chinese investors, the total circulating supply ratio is 20.5%.\n\n\nThe foundation controls the following addresses:\n\n\n\n\n\n\n\n\nAddress\n\n\nLRC Balance\n\n\n\n\n\n\n\n\n\n\n\n\n0x7B22713f2e818fad945AF5a3618a2814F102cbe0 (icebox)\n\n\n279,015,212\n\n\n\n\n\n\n\n\n0xdFCA9bF60785A5651b4262755cA60d48EFe6E3CF\n\n\n138,768,403\n\n\n\n\n\n\n\n\n0x51018afFFaD06730D5b815486e6d9acE7bA99409\n\n\n106,527,780\n\n\n\n\n\n\n\n\n0x9952F869f12a7af92aB86B275cFa231C868Aad23\n\n\n65,646,211\n\n\n\n\n\n\n\n\n0x473Aa9C129180262fE6EfcA609D60f03B66b9d2e\n\n\n61,673,216\n\n\n\n\n\n\n\n\n0x959c6b8574b779A1E7d709e4966Ec2C8F8ABa4b4\n\n\n54,001,284\n\n\n\n\n\n\n\n\n0x85e64Df825c6397904Fe4A366629112079C64858\n\n\n48,460,979\n\n\n\n\n\n\n\n\n0x1C2bF1A1Cfdf2D2aA401735Da5996F8171C81C5f\n\n\n42,385,206\n\n\n\n\n\n\n\n\n0x81A5c6392c4DBE91fC942FA2010563c88D830Cf4\n\n\n28,505,011\n\n\n\n\n\n\n\n\n0xAD3c895C3678e77884366cD891b0984acd214775\n\n\n11,214,569\n\n\n\n\n\n\n\n\n0xB7bb1E956beF65F22B32b04f230159040Dcb1829\n\n\n1,378,402\n\n\n\n\n\n\n\n\n0x947EE764129AF89B803E43A29083cB9728ab5b9b\n\n\n782,294\n\n\n\n\n\n\n\n\n0xC7e217cEc00ebEf8711935a33b6Cd8aB9906f5FB\n\n\n301,426\n\n\n\n\n\n\n\n\n0x8C86D95881b7392Ce06C1162a230a3974d624D4a\n\n\n2,400\n\n\n\n\n\n\n\n\nSUB-TOTAL\n\n\n838,662,393\n\n\n\n\n\n\n\n\n\n\nThe following addresses contain LRC that are burned by either the foundation or some users (Nobody can transfer these LRC out to another address).\n\n\n\n\n\n\n\n\nAddress\n\n\nLRC Balance\n\n\n\n\n\n\n\n\n\n\n\n\n0x0000000000000000000000000000000000000000 (blackhole)\n\n\n20,000,000\n\n\n\n\n\n\n\n\n0xEF68e7C694F40c8202821eDF525dE3782458639f (LRC-contract)\n\n\n117,776\n\n\n\n\n\n\n\n\nSUB-TOTAL\n\n\n20,117,776\n\n\n\n\n\n\n\n\n\n\nAdditionally, several institute addresses collectively hold about 118,626,980 LRC that are not suppose to circulate within a year. We cannot list these addresses.\n\n\nWe also have two incentive plan addresses. The first one is the mid-term plan whose LRC may be unlock in about a year; the second address is for the long-term plan whose LRC won't be unlocked until 18 months later.\n\n\n\n\n\n\n\n\nAddress\n\n\nLRC Balance\n\n\n\n\n\n\n\n\n\n\n\n\n0x8b34fbc553db3462ad4909f2e5577cc22f63c216 (mid-term)\n\n\n39,261,025\n\n\n\n\n\n\n\n\n0x239dE3a0D6ca5f21601f83327eA2174225eB7156 (long-term)\n\n\n92,237,125\n\n\n\n\n\n\n\n\nSUB-TOTAL\n\n\n131,498,150\n\n\n\n\n\n\n\n\n\n\nPut all these together, we have:\n\n\n\n\n\n\n\n\nAddress Group\n\n\nLRC Balance\n\n\nPercentage\n\n\n\n\n\n\n\n\n\n\n\n\nFoundation\n\n\n838,662,393\n\n\n60.1%\n\n\n\n\n\n\n\n\nBurned\n\n\n20,117,776\n\n\n1.4%\n\n\n\n\n\n\n\n\nInstitute Investors\n\n\n118,626,980\n\n\n8.5%\n\n\n\n\n\n\n\n\nIncentive Plans\n\n\n131,498,150\n\n\n9.4%\n\n\n\n\n\n\n\n\nCirculating Supply\n\n\n286,170,755.5238\n\n\n20.5%\n\n\n\n\n\n\n\n\nTotal Supply\n\n\n1,395,076,054.5238\n\n\n100.0%\n\n\n\n\n\n\n\n\n\n\nPlease note:\n\n\n\n\nLoopring foundation are determined to reward a considerable portion of LRC tokens to developers, partners, and community contributors, the circulating supply will increase overtime. \n\n\nAll the above numbers are collected and calculated on Sept 25th, 2017 and may not be updated in time to reflect the facts when you read this document.", 
            "title": "LRC Token"
        }, 
        {
            "location": "/token/#trend", 
            "text": "To learn more about LRC token, checkout  https://etherscan.io/address/lrctoken.eth  or  https://etherscan.io/token/0xEF68e7C694F40c8202821eDF525dE3782458639f .", 
            "title": "Trend"
        }, 
        {
            "location": "/token/#circulating-supply", 
            "text": "After the refunding effort to our Chinese investors, the total circulating supply ratio is 20.5%.  The foundation controls the following addresses:     Address  LRC Balance       0x7B22713f2e818fad945AF5a3618a2814F102cbe0 (icebox)  279,015,212     0xdFCA9bF60785A5651b4262755cA60d48EFe6E3CF  138,768,403     0x51018afFFaD06730D5b815486e6d9acE7bA99409  106,527,780     0x9952F869f12a7af92aB86B275cFa231C868Aad23  65,646,211     0x473Aa9C129180262fE6EfcA609D60f03B66b9d2e  61,673,216     0x959c6b8574b779A1E7d709e4966Ec2C8F8ABa4b4  54,001,284     0x85e64Df825c6397904Fe4A366629112079C64858  48,460,979     0x1C2bF1A1Cfdf2D2aA401735Da5996F8171C81C5f  42,385,206     0x81A5c6392c4DBE91fC942FA2010563c88D830Cf4  28,505,011     0xAD3c895C3678e77884366cD891b0984acd214775  11,214,569     0xB7bb1E956beF65F22B32b04f230159040Dcb1829  1,378,402     0x947EE764129AF89B803E43A29083cB9728ab5b9b  782,294     0xC7e217cEc00ebEf8711935a33b6Cd8aB9906f5FB  301,426     0x8C86D95881b7392Ce06C1162a230a3974d624D4a  2,400     SUB-TOTAL  838,662,393      The following addresses contain LRC that are burned by either the foundation or some users (Nobody can transfer these LRC out to another address).     Address  LRC Balance       0x0000000000000000000000000000000000000000 (blackhole)  20,000,000     0xEF68e7C694F40c8202821eDF525dE3782458639f (LRC-contract)  117,776     SUB-TOTAL  20,117,776      Additionally, several institute addresses collectively hold about 118,626,980 LRC that are not suppose to circulate within a year. We cannot list these addresses.  We also have two incentive plan addresses. The first one is the mid-term plan whose LRC may be unlock in about a year; the second address is for the long-term plan whose LRC won't be unlocked until 18 months later.     Address  LRC Balance       0x8b34fbc553db3462ad4909f2e5577cc22f63c216 (mid-term)  39,261,025     0x239dE3a0D6ca5f21601f83327eA2174225eB7156 (long-term)  92,237,125     SUB-TOTAL  131,498,150      Put all these together, we have:     Address Group  LRC Balance  Percentage       Foundation  838,662,393  60.1%     Burned  20,117,776  1.4%     Institute Investors  118,626,980  8.5%     Incentive Plans  131,498,150  9.4%     Circulating Supply  286,170,755.5238  20.5%     Total Supply  1,395,076,054.5238  100.0%      Please note:   Loopring foundation are determined to reward a considerable portion of LRC tokens to developers, partners, and community contributors, the circulating supply will increase overtime.   All the above numbers are collected and calculated on Sept 25th, 2017 and may not be updated in time to reflect the facts when you read this document.", 
            "title": "Circulating Supply"
        }, 
        {
            "location": "/projects/protocol/", 
            "text": "Loopring Smart Contracts\n\n\nThe loopring smart contracts are a set of ethereum contracts that implement the loopring protocol. This document describes the functionnalities they provide and is structured as follows:\n\n\n\n\nManagement of Orders\n\n\nAnatomy of an Order\n\n\nFull or Partial Cancellation\n\n\nFill and Cancellation Tracking\n\n\n\n\n\n\nVerification of Miner Supplied Data\n\n\nOrder Ring\n\n\nOrder Ring Validation\n\n\nSub-Loop Checking\n\n\nFill Rate Checing\n\n\nOrder Scaling\n\n\n\n\n\n\n\n\n\n\nRing settlement\n\n\nTransactions\n\n\nFee Model\n\n\n\n\n\n\nEmitted Events\n\n\nFraud and Attack Protections\n\n\nRing Filch\n\n\nDenial of Service\n\n\nMassive Tiny Order Attack\n\n\nInsufficient Balance\n\n\n\n\n\n\n\n\nThe code is open source and available on \ngithub\n.\n\n\nThe Loopring Smart Contracts will be refered as \nLSC\n in this document. You can read more about the calculations and formulas used here in the \nwhitepaper\n and supersimmetry's {\nda447m@yahoo.com\n} \nRemarks on Loopring\n. Please be noted that in the current protocol implementation, the pricing model is the same as in our whitepaper and supersimmetry's document, but the fee model is different.\n\n\nManagement of Orders\n\n\nTo understand what the LSC does, we must first take a look at the definition of an order, the available actions for the user and how the current order state is tracked.\n\n\nAnatomy of an Order\n\n\nAn order is a pack of data that describes the intent of the user on the market. To ensure the origin of the order, it is \nsigned against the hash of its parameters\n with the user's private key. The signature is sent along the order on the network. This requires the order to stay \nimmutable\n during its whole lifetime to verifiy the sender's address.\n\n\nSignature = ECDSA(SHA3(order_params))\n\n\nEven if the order never changes, the LSC has the possibility to \ncompute its current state\n.\n\n\nRelevant variables of an order's parameters (for a complete list of order parameters, see \nthe code\n):\n\n\n\n\n\n\n\n\nData\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nowner\n\n\nThe owner (signer) address\n\n\n\n\n\n\ntokenS\n\n\nToken to sell\n\n\n\n\n\n\ntokenB\n\n\nToken to buy\n\n\n\n\n\n\namountS\n\n\nAmount of tokenS to sell\n\n\n\n\n\n\namountB\n\n\nAmount of tokenB to buy\n\n\n\n\n\n\nbuyNoMoreThanAmountB\n\n\nsee below\n\n\n\n\n\n\nttl\n\n\n(time to live) Seconds after wich the order will expire\n\n\n\n\n\n\nlrcFee\n\n\nMax amount of LRC to pay to the miner\n\n\n\n\n\n\nmarginSplitPercentage\n\n\nThe percentage of margin paid to the miner (when a better rate is found)\n\n\n\n\n\n\n\n\nWe called the above model \nUnidirectional Order Model\n, or UDOM for short. To learn more about UDOM, check out our \nmedium post\n.\n\n\nThe exchange rate \nr\n of the order is determined using the following formula \nr = amountS/amountB\n. When a miner does the ring-matching there is a possibility that he finds you a better rate that gets you more \ntokenB\n than the \namountB\n you specified. But, if the \nbuyNoMoreThanAmountB\n flag is set, the LSC will make sure that you still get exactly \namountB\n of \ntokenB\n.\n\n\n\n\nExample\n: with \namountS = 10\n and \namountB = 2\n, \nr = 10/2 = 5\n. This means that you are willing to sell \n5 tokenS for each tokenB\n. The miner does the ring-matching and \nfinds you a rate of 4\n, topping the amount he could get you to \n2.5 tokensB instead of 2\n. You only wanted 2 tokensB and set the \nbuyNoMoreThanAmountB flag to true\n. The LSC takes that into consideration and still makes the transaction at a rate of 4 and you ended up selling \n4 tokenS for each tokenB\n, effectively \nsaving 2 tokenS\n. Keep in mind that this does not take into account the miner fees.\n\n\n\n\nFull or Partial Cancellation\n\n\nA user can partially or fully cancel an order by sending a special transaction to the LSC, containing the details about the order and the amounts to cancel. The LSC will take that into account, store the amounts to cancel and emit an \nOrderCancelled\n event to the network.\n\n\nFill and Cancellation Tracking\n\n\nThe LSC keep track of fill and cancellation amounts by storing their values using the order's hash as an identifier. This data is publicly accessible and \nOrderCancelled\n / \nOrderFilled\n events are emitted when it changes.\n\n\nThis tracking is useful for the LSC during the \nring settlement\n step.\n\n\nVerification of Miner Supplied Data\n\n\nThis section will talk about what the LSC expect to receive from the miners and the steps taken to verify the data.\n\n\nOrder Ring\n\n\nThe LSC expect to receive order rings from the miners. An order ring is multiple orders linked together in a way that allows them to be all matched at their desired exchange rate or better. See the diagram below as an example.\n\n\n\n\nNotice how each order's token to sell is the following order's token to buy. It creates a loop that allows each order to effectively sell and buy their desired tokens without having a matching order of the opposite pair.\n\n\nA ring is said to be valid when all the transactions can be made at an exchange rate equal or better than the original one specified by the user.\nTo verify the ring validity, the product of the original exchange rates of all orders should be equal to or greater than 1.\n\n\n\n\nExample\n: Let's check if the above ring in the diagram is valid.\n\n0.2 * 14 * 0.5 = 1.4\n the result is greater than 1, thus the trade should be possible.\n\n\n\n\nOrder Ring Validation\n\n\nThe LSC does not perform the exchange rate or amount calculations but still has to verify what the miner supplied for these values. This is done by miners for two main reasons: solidity does not have support for floating point maths, especially \npow(x, 1/n)\n and it is desired that the computation is made off-chain to save gas.\n\n\nThe following section discusses mathematical validation of the order rings. We recommand you to check as a complementary supersimmetry's document listed at the beginning of this page.\n\n\nSub-Loop Checking\n\n\nThis step prevents about \ncovered interest arbitrage\n. Once a valid ring is found by a miner, he could be tempted to add other orders to it to achieve a zero-risk covered interest arbitrage.\nThis is considered as an unfair conduct from the miner in Loopring.\n\n\nThe diagram bellow illustrates the previous valid ring where 2 orders were added.\n\n\n\nTo prevent this, Loopring requires that \na valid loop cannot contain a sub-loop\n. There is a very simple way to check this: a \ntoken cannot be twice in a buy or sell position\n. In the above diagram we can see that ARK is twice as a token to sell and twice as a token to buy.\n\n\nFill Rate Checking\n\n\nThe rates calculation for the transactions in the ring are made by the miners for the reasons stated above in this page. Therefore the LSC have to verify that they are correct.\n\n\nThis first verifies that the sell rate the miner supplied for each order is at least equal or less than the orginial sell rate set by the user. Meaning that the user gets a least the exchange rate he asked or better at the moment of the transaction.\n\n\nOnce the exchange rates are confirmed we make sure that all the margins (discounts) are at the same percentage for every orders, to ensure fairness.\n\n\nOrder Scaling\n\n\nComes the part where the orders are scaled according to:\n\n The history of filled and cancelled amounts\n\n The current balance of the senders accounts\n\n\nThe process finds the order with the smallest amount to be filled according to the above caracteristics and uses it as a reference for scaling all the transactions in the ring.\n\n\n\n\nExample\n: If the smallest amount to be filled compared to the original order is 5%, all the transactions in the ring are scaled down to 5%. Once the transactions are completed, the order that was considered to have the smallest amount remaining to be filled should be completly filled.\n\n\n\n\nRing Settlement\n\n\nAll the lights are green from the previous checks, the transactions can be made.\n\n\nTransactions\n\n\nTo make the transactions, the LSC uses the \nTokenTransferDelegate\n smart contract. The introduction of such a delegate makes upgrading the protocol smart contract easier as all orders only need to authorize this delegate instead of different versions of the protocol.\n\n\nFor each order in the ring, a payment of tokenS is made to the previous order. Then the miner's fee is paied depending on the fee model chosen by the miner. If the model was the LRC fee, the remaining amount after the fee is paid is returned to the order's owner. Finally, an \nOrderFilled\n event is fired.\n\n\nOnce all the transaction are made, a \nRingMined\n event is fired.\n\n\nFee Model\n\n\nThis section describes the current fee model of Loopring. As a complementary we advise you to read Daniel's \nmedium article\n on the subject.\n\n\nIn the current fee model, the miner has two possible choices.\nWhen a user creates his order, he specifies a maximum of LRC to be paid to the miner as a fee as well as a percentage of the margin made on his order that the miner can claim. This is called the margin split. The decision of which one to choose is left to the miner.\n\n\nA representation of the margin split:\n\n\n\n\nIf the miner decides that the margin on the ring is too small, he will choose the LRC fee. On the contrary if the margin is consequent enough for the resulting margin split to be worth more than the LRC fee, he will choose the margin split.\n\n\nBut here comes the twist. When the miner chooses the margin split, he has to pay the user a fee, which is equal to what the user would have paid as a fee to the miner for his transaction. This increases the threshold where the miner will choose the margin split to twice the LRC fee of the order, adding weight to the LRC fee choice.\n\n\nFrom the miner's point of view, this allows him to get a constant income on low margin rings with the drawback of getting less income from the bigger margin rings. As the market grows and becomes more mature, we expect to have less high margin rings and our fee model is based on that future.\n\n\nWe end up with the following graph:\n\n\n\n\n\n\nf is the LRC fee\n\n\nx is the margin split\n\n\ny is the miner's income\n\n\n\n\nIf \nf\n is the LRC fee and \nx\n the Margin Split, then the miner's income \ny\n is \ny = max(f, x-f)\n and we get the blue line.\n\n\nIf the specified LRC fee for the order is 0, the equation is \ny = max(0, x - 0)\n that simplifies to \ny = x\n and we get the orange line.\n\n\nThis has the following consequences:\n- If the \nmargin split is 0\n, the miners will choose the flat LRC fee and are still incentivized.\n- If the \nLRC fee is 0\n, this is the orange line and the income is based on a general model.\n- When the \nmargin split income\n get's bigger than \ntwice the LRC fee\n, only then will the miner choose the margin split.\n\n\nIt should be noted that if the \nLRC fee is non-zero\n, no matter which option the miner chooses, there will always be a transfer of LRC between the miner and the order's sender. Either by sending back the surplus of LRC fee or by paying the LRC fee to the sender to take the margin split.\n\n\nThe current fee model is still open for discussion. Feel free to join our community on \nslack\n to talk about it. Suggestions are welcomed to the \nLIPs\n repository on github.\n\n\nEmitted Events\n\n\nIn this page you should have come by a set of events that are emitted by the LSC. These events exist to allow the relays/order browsers and other elements that need an update of their orderbooks to get the information as quickly as possible.\n\n\nA list of the emitted events:\n\n \nOrderCancelled\n\n\n \nOrderFilled\n\n* \nRingMined\n\n\nFraud and Attack Protections\n\n\nRing Filch\n\n\nAn attacker could monitor all uncon\ufb01rmed Rings and broadcast the same rings with their own digital signature. We call this Ring Filch. In order to prevent Ring Filch Loopring allows miners to use two steps in order to submit their Rings:\n\n\n\n\nSubmit the hash of the Ring and wait for confirmation\n\n\nSubmit the Ring itself\n\n\n\n\nThis protection is valid for a \nblocksToLive\n time specified in the LSC. After that duration, if the ring has not been submitted, an other miner can claim it.\n\n\nDenial of Service\n\n\nWe allow nodes to selectively handle orders by setting their own criterias and they may choose to hide or reveal them. Therefore we do not see denial of service as a form of unethical behaviour.\n\n\nMassive Tiny Order Attack\n\n\nA user could send a large amount of tiny orders to attack the Loopring nodes. However since we allow nodes to reject orders based on their own criterias, most of these orders will be rejected because they do not yield satisfying profit when matched. Thus making a massive tiny order attack not feasible.\n\n\nInsufficient Balance\n\n\nMalicious users may sign and spread out orders whose value inside the order is not zero but whose address actually has zero balance. Nodes could monitor and notice that some orders actual balance is zero, update these orders states accordingly and then discard them.\n\n\nNodes do have to spend time to update the status of an order, but can also choose to minimize the effort by, for example, blacklisting addresses and drop related orders.", 
            "title": "Protocol"
        }, 
        {
            "location": "/projects/protocol/#loopring-smart-contracts", 
            "text": "The loopring smart contracts are a set of ethereum contracts that implement the loopring protocol. This document describes the functionnalities they provide and is structured as follows:   Management of Orders  Anatomy of an Order  Full or Partial Cancellation  Fill and Cancellation Tracking    Verification of Miner Supplied Data  Order Ring  Order Ring Validation  Sub-Loop Checking  Fill Rate Checing  Order Scaling      Ring settlement  Transactions  Fee Model    Emitted Events  Fraud and Attack Protections  Ring Filch  Denial of Service  Massive Tiny Order Attack  Insufficient Balance     The code is open source and available on  github .  The Loopring Smart Contracts will be refered as  LSC  in this document. You can read more about the calculations and formulas used here in the  whitepaper  and supersimmetry's { da447m@yahoo.com }  Remarks on Loopring . Please be noted that in the current protocol implementation, the pricing model is the same as in our whitepaper and supersimmetry's document, but the fee model is different.", 
            "title": "Loopring Smart Contracts"
        }, 
        {
            "location": "/projects/protocol/#management-of-orders", 
            "text": "To understand what the LSC does, we must first take a look at the definition of an order, the available actions for the user and how the current order state is tracked.", 
            "title": "Management of Orders"
        }, 
        {
            "location": "/projects/protocol/#anatomy-of-an-order", 
            "text": "An order is a pack of data that describes the intent of the user on the market. To ensure the origin of the order, it is  signed against the hash of its parameters  with the user's private key. The signature is sent along the order on the network. This requires the order to stay  immutable  during its whole lifetime to verifiy the sender's address.  Signature = ECDSA(SHA3(order_params))  Even if the order never changes, the LSC has the possibility to  compute its current state .  Relevant variables of an order's parameters (for a complete list of order parameters, see  the code ):     Data  Comment      owner  The owner (signer) address    tokenS  Token to sell    tokenB  Token to buy    amountS  Amount of tokenS to sell    amountB  Amount of tokenB to buy    buyNoMoreThanAmountB  see below    ttl  (time to live) Seconds after wich the order will expire    lrcFee  Max amount of LRC to pay to the miner    marginSplitPercentage  The percentage of margin paid to the miner (when a better rate is found)     We called the above model  Unidirectional Order Model , or UDOM for short. To learn more about UDOM, check out our  medium post .  The exchange rate  r  of the order is determined using the following formula  r = amountS/amountB . When a miner does the ring-matching there is a possibility that he finds you a better rate that gets you more  tokenB  than the  amountB  you specified. But, if the  buyNoMoreThanAmountB  flag is set, the LSC will make sure that you still get exactly  amountB  of  tokenB .   Example : with  amountS = 10  and  amountB = 2 ,  r = 10/2 = 5 . This means that you are willing to sell  5 tokenS for each tokenB . The miner does the ring-matching and  finds you a rate of 4 , topping the amount he could get you to  2.5 tokensB instead of 2 . You only wanted 2 tokensB and set the  buyNoMoreThanAmountB flag to true . The LSC takes that into consideration and still makes the transaction at a rate of 4 and you ended up selling  4 tokenS for each tokenB , effectively  saving 2 tokenS . Keep in mind that this does not take into account the miner fees.", 
            "title": "Anatomy of an Order"
        }, 
        {
            "location": "/projects/protocol/#full-or-partial-cancellation", 
            "text": "A user can partially or fully cancel an order by sending a special transaction to the LSC, containing the details about the order and the amounts to cancel. The LSC will take that into account, store the amounts to cancel and emit an  OrderCancelled  event to the network.", 
            "title": "Full or Partial Cancellation"
        }, 
        {
            "location": "/projects/protocol/#fill-and-cancellation-tracking", 
            "text": "The LSC keep track of fill and cancellation amounts by storing their values using the order's hash as an identifier. This data is publicly accessible and  OrderCancelled  /  OrderFilled  events are emitted when it changes.  This tracking is useful for the LSC during the  ring settlement  step.", 
            "title": "Fill and Cancellation Tracking"
        }, 
        {
            "location": "/projects/protocol/#verification-of-miner-supplied-data", 
            "text": "This section will talk about what the LSC expect to receive from the miners and the steps taken to verify the data.", 
            "title": "Verification of Miner Supplied Data"
        }, 
        {
            "location": "/projects/protocol/#order-ring", 
            "text": "The LSC expect to receive order rings from the miners. An order ring is multiple orders linked together in a way that allows them to be all matched at their desired exchange rate or better. See the diagram below as an example.   Notice how each order's token to sell is the following order's token to buy. It creates a loop that allows each order to effectively sell and buy their desired tokens without having a matching order of the opposite pair.  A ring is said to be valid when all the transactions can be made at an exchange rate equal or better than the original one specified by the user.\nTo verify the ring validity, the product of the original exchange rates of all orders should be equal to or greater than 1.   Example : Let's check if the above ring in the diagram is valid. 0.2 * 14 * 0.5 = 1.4  the result is greater than 1, thus the trade should be possible.", 
            "title": "Order Ring"
        }, 
        {
            "location": "/projects/protocol/#order-ring-validation", 
            "text": "The LSC does not perform the exchange rate or amount calculations but still has to verify what the miner supplied for these values. This is done by miners for two main reasons: solidity does not have support for floating point maths, especially  pow(x, 1/n)  and it is desired that the computation is made off-chain to save gas.  The following section discusses mathematical validation of the order rings. We recommand you to check as a complementary supersimmetry's document listed at the beginning of this page.", 
            "title": "Order Ring Validation"
        }, 
        {
            "location": "/projects/protocol/#sub-loop-checking", 
            "text": "This step prevents about  covered interest arbitrage . Once a valid ring is found by a miner, he could be tempted to add other orders to it to achieve a zero-risk covered interest arbitrage.\nThis is considered as an unfair conduct from the miner in Loopring.  The diagram bellow illustrates the previous valid ring where 2 orders were added.  To prevent this, Loopring requires that  a valid loop cannot contain a sub-loop . There is a very simple way to check this: a  token cannot be twice in a buy or sell position . In the above diagram we can see that ARK is twice as a token to sell and twice as a token to buy.", 
            "title": "Sub-Loop Checking"
        }, 
        {
            "location": "/projects/protocol/#fill-rate-checking", 
            "text": "The rates calculation for the transactions in the ring are made by the miners for the reasons stated above in this page. Therefore the LSC have to verify that they are correct.  This first verifies that the sell rate the miner supplied for each order is at least equal or less than the orginial sell rate set by the user. Meaning that the user gets a least the exchange rate he asked or better at the moment of the transaction.  Once the exchange rates are confirmed we make sure that all the margins (discounts) are at the same percentage for every orders, to ensure fairness.", 
            "title": "Fill Rate Checking"
        }, 
        {
            "location": "/projects/protocol/#order-scaling", 
            "text": "Comes the part where the orders are scaled according to:  The history of filled and cancelled amounts  The current balance of the senders accounts  The process finds the order with the smallest amount to be filled according to the above caracteristics and uses it as a reference for scaling all the transactions in the ring.   Example : If the smallest amount to be filled compared to the original order is 5%, all the transactions in the ring are scaled down to 5%. Once the transactions are completed, the order that was considered to have the smallest amount remaining to be filled should be completly filled.", 
            "title": "Order Scaling"
        }, 
        {
            "location": "/projects/protocol/#ring-settlement", 
            "text": "All the lights are green from the previous checks, the transactions can be made.", 
            "title": "Ring Settlement"
        }, 
        {
            "location": "/projects/protocol/#transactions", 
            "text": "To make the transactions, the LSC uses the  TokenTransferDelegate  smart contract. The introduction of such a delegate makes upgrading the protocol smart contract easier as all orders only need to authorize this delegate instead of different versions of the protocol.  For each order in the ring, a payment of tokenS is made to the previous order. Then the miner's fee is paied depending on the fee model chosen by the miner. If the model was the LRC fee, the remaining amount after the fee is paid is returned to the order's owner. Finally, an  OrderFilled  event is fired.  Once all the transaction are made, a  RingMined  event is fired.", 
            "title": "Transactions"
        }, 
        {
            "location": "/projects/protocol/#fee-model", 
            "text": "This section describes the current fee model of Loopring. As a complementary we advise you to read Daniel's  medium article  on the subject.  In the current fee model, the miner has two possible choices.\nWhen a user creates his order, he specifies a maximum of LRC to be paid to the miner as a fee as well as a percentage of the margin made on his order that the miner can claim. This is called the margin split. The decision of which one to choose is left to the miner.  A representation of the margin split:   If the miner decides that the margin on the ring is too small, he will choose the LRC fee. On the contrary if the margin is consequent enough for the resulting margin split to be worth more than the LRC fee, he will choose the margin split.  But here comes the twist. When the miner chooses the margin split, he has to pay the user a fee, which is equal to what the user would have paid as a fee to the miner for his transaction. This increases the threshold where the miner will choose the margin split to twice the LRC fee of the order, adding weight to the LRC fee choice.  From the miner's point of view, this allows him to get a constant income on low margin rings with the drawback of getting less income from the bigger margin rings. As the market grows and becomes more mature, we expect to have less high margin rings and our fee model is based on that future.  We end up with the following graph:    f is the LRC fee  x is the margin split  y is the miner's income   If  f  is the LRC fee and  x  the Margin Split, then the miner's income  y  is  y = max(f, x-f)  and we get the blue line.  If the specified LRC fee for the order is 0, the equation is  y = max(0, x - 0)  that simplifies to  y = x  and we get the orange line.  This has the following consequences:\n- If the  margin split is 0 , the miners will choose the flat LRC fee and are still incentivized.\n- If the  LRC fee is 0 , this is the orange line and the income is based on a general model.\n- When the  margin split income  get's bigger than  twice the LRC fee , only then will the miner choose the margin split.  It should be noted that if the  LRC fee is non-zero , no matter which option the miner chooses, there will always be a transfer of LRC between the miner and the order's sender. Either by sending back the surplus of LRC fee or by paying the LRC fee to the sender to take the margin split.  The current fee model is still open for discussion. Feel free to join our community on  slack  to talk about it. Suggestions are welcomed to the  LIPs  repository on github.", 
            "title": "Fee Model"
        }, 
        {
            "location": "/projects/protocol/#emitted-events", 
            "text": "In this page you should have come by a set of events that are emitted by the LSC. These events exist to allow the relays/order browsers and other elements that need an update of their orderbooks to get the information as quickly as possible.  A list of the emitted events:   OrderCancelled    OrderFilled \n*  RingMined", 
            "title": "Emitted Events"
        }, 
        {
            "location": "/projects/protocol/#fraud-and-attack-protections", 
            "text": "", 
            "title": "Fraud and Attack Protections"
        }, 
        {
            "location": "/projects/protocol/#ring-filch", 
            "text": "An attacker could monitor all uncon\ufb01rmed Rings and broadcast the same rings with their own digital signature. We call this Ring Filch. In order to prevent Ring Filch Loopring allows miners to use two steps in order to submit their Rings:   Submit the hash of the Ring and wait for confirmation  Submit the Ring itself   This protection is valid for a  blocksToLive  time specified in the LSC. After that duration, if the ring has not been submitted, an other miner can claim it.", 
            "title": "Ring Filch"
        }, 
        {
            "location": "/projects/protocol/#denial-of-service", 
            "text": "We allow nodes to selectively handle orders by setting their own criterias and they may choose to hide or reveal them. Therefore we do not see denial of service as a form of unethical behaviour.", 
            "title": "Denial of Service"
        }, 
        {
            "location": "/projects/protocol/#massive-tiny-order-attack", 
            "text": "A user could send a large amount of tiny orders to attack the Loopring nodes. However since we allow nodes to reject orders based on their own criterias, most of these orders will be rejected because they do not yield satisfying profit when matched. Thus making a massive tiny order attack not feasible.", 
            "title": "Massive Tiny Order Attack"
        }, 
        {
            "location": "/projects/protocol/#insufficient-balance", 
            "text": "Malicious users may sign and spread out orders whose value inside the order is not zero but whose address actually has zero balance. Nodes could monitor and notice that some orders actual balance is zero, update these orders states accordingly and then discard them.  Nodes do have to spend time to update the status of an order, but can also choose to minimize the effort by, for example, blacklisting addresses and drop related orders.", 
            "title": "Insufficient Balance"
        }, 
        {
            "location": "/projects/relay/", 
            "text": "Relays", 
            "title": "Relays"
        }, 
        {
            "location": "/projects/relay/#relays", 
            "text": "", 
            "title": "Relays"
        }, 
        {
            "location": "/projects/ringminer/", 
            "text": "Ring Miners\n\n\nIn construction.", 
            "title": "Ring Miners"
        }, 
        {
            "location": "/projects/ringminer/#ring-miners", 
            "text": "In construction.", 
            "title": "Ring Miners"
        }, 
        {
            "location": "/projects/wallet/", 
            "text": "Wallets\n\n\nIn construction.", 
            "title": "Wallets"
        }, 
        {
            "location": "/projects/wallet/#wallets", 
            "text": "In construction.", 
            "title": "Wallets"
        }, 
        {
            "location": "/projects/tokenization/", 
            "text": "Asset Tokenization Services\n\n\nIn construction.", 
            "title": "Tokenization Services"
        }, 
        {
            "location": "/projects/tokenization/#asset-tokenization-services", 
            "text": "In construction.", 
            "title": "Asset Tokenization Services"
        }, 
        {
            "location": "/contribution/", 
            "text": "Contribution\n\n\nHow to contribute\n\n\nWe use \nSlack\n to communicate with each other. Feel free join in our slack channels:\n\n\n\n\nLoopring Announcement (read-only)\n\n\nLoopring Community (English)\n\n\nLoopring Contributors\n\n\n\n\nYou may want to talk to Daniel Wang (\ndaniel@loopring.org\n), Loopring CEO and major developer, about your idea and the way you can help. This is not a prerequisite, however, you can create pull requests at anytime.\n\n\nOur Git Branching Model\n\n\nFor git repositories that have releases (this one not included), we will adopt \n\"A Successful Git Branching Model\"\n starting from Nov. 1st, 2017.\n\n\n\n\nContributors\n\n\nIf your pull requests are ever accepted and merged, please create a pull request to put yoruself in this list.\n\n\n\n\nFei YUAN -  Reviewed LRC token smart-contract and created an important pull request.", 
            "title": "Contribution"
        }, 
        {
            "location": "/contribution/#contribution", 
            "text": "", 
            "title": "Contribution"
        }, 
        {
            "location": "/contribution/#how-to-contribute", 
            "text": "We use  Slack  to communicate with each other. Feel free join in our slack channels:   Loopring Announcement (read-only)  Loopring Community (English)  Loopring Contributors   You may want to talk to Daniel Wang ( daniel@loopring.org ), Loopring CEO and major developer, about your idea and the way you can help. This is not a prerequisite, however, you can create pull requests at anytime.", 
            "title": "How to contribute"
        }, 
        {
            "location": "/contribution/#our-git-branching-model", 
            "text": "For git repositories that have releases (this one not included), we will adopt  \"A Successful Git Branching Model\"  starting from Nov. 1st, 2017.", 
            "title": "Our Git Branching Model"
        }, 
        {
            "location": "/contribution/#contributors", 
            "text": "If your pull requests are ever accepted and merged, please create a pull request to put yoruself in this list.   Fei YUAN -  Reviewed LRC token smart-contract and created an important pull request.", 
            "title": "Contributors"
        }
    ]
}