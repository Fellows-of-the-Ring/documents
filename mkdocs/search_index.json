{
    "docs": [
        {
            "location": "/", 
            "text": "Welcome\n\n\nLoopring is a project for decentralized ERC20 token exchange. The first public blockchain Loopring supports will be Ethereum, but other blockchains with smart contract capability can also be supported in a similar way, such as NEO, Qtum, and EOS. To have an overview of Loopring, please visit our website - \nhttps://loopring.org\n.\n\n\nLoopring is not a decentralized exchange per se, as all building blocks of a traditional exchange are dissembled and put together again as different roles in a decentralized environment. These roles include, but may not be limited to, wallets, relays, orderbook browsers, ring-miners, and asset tokenization services. Some of those roles are described in \nOverview\n.\n\n\nThis website consists of documents regarding many aspect of Loopring project and its sub-projects. This documentation sub-project is a on-going effort, we need and welcome contributions from the community. If you want to offer help, please join us on \nSlack\n and read the \nHow to contribute\n section; if you ever offered any help, please feel free to add your name to the \nContributors\n section, it's our honor to have you there.", 
            "title": "About"
        }, 
        {
            "location": "/#welcome", 
            "text": "Loopring is a project for decentralized ERC20 token exchange. The first public blockchain Loopring supports will be Ethereum, but other blockchains with smart contract capability can also be supported in a similar way, such as NEO, Qtum, and EOS. To have an overview of Loopring, please visit our website -  https://loopring.org .  Loopring is not a decentralized exchange per se, as all building blocks of a traditional exchange are dissembled and put together again as different roles in a decentralized environment. These roles include, but may not be limited to, wallets, relays, orderbook browsers, ring-miners, and asset tokenization services. Some of those roles are described in  Overview .  This website consists of documents regarding many aspect of Loopring project and its sub-projects. This documentation sub-project is a on-going effort, we need and welcome contributions from the community. If you want to offer help, please join us on  Slack  and read the  How to contribute  section; if you ever offered any help, please feel free to add your name to the  Contributors  section, it's our honor to have you there.", 
            "title": "Welcome"
        }, 
        {
            "location": "/overview/", 
            "text": "What is Loopring\n\n\nLoopring is a decentralized token exchange protocol. It is implemented as an ethereum smart-contract at the core of the loopring decentralized exchange system. Its design allows for several improvements over traditional centralized exchanges:\n\n\n\n\nZero Risks Trading:\n The tokens stay in the user's wallet and are never locked by orders.\n\n\nHigh liquidity:\n Orders are ring-matched allowing for high liquidity on any trading pair.\n\n\nFairness:\n The fee \n discount model allows for fairness between all parties involved (Makers, Takers and Miners).\n\n\nWeak Supervision:\n The whole system is completely decentralised.\n\n\n\n\nYou can learn more about the background and general design of the loopring protocol in our \nwhitepaper\n.\nBear in mind that as we proceed with the implementation, some details in the whitepaper might become outdated. Whenever there is a difference, please refer to this website as the latest official update.\n\n\nWhy ?\n\n\nThe loopring protocol was designed to address numerous issues found in centralized exchanges, for a brief explanation checkout the \nlast section\n of this page.\n\n\nEcosystem\n\n\nThis section introduces the key parts of the loopring ecosystem and how they interact with each other. They jointly provide all functionalities a centralized exchange has to offer. For a more in depth explanation of each one of them, follow the links below.\n\n\nWallets\n\n\n\n\nA common wallet service/interface that gives you access to your tokens and provides you with a way to send orders to the loopring network.\n\n\n\n\nRelays\n\n\n\n\nMaintains public orderbooks and trade history. Broadcasts new orders to other relays and ring miners.\n\n\n\n\nRing Miners\n\n\n\n\nTries to determine a way to fulfill received orders by ring-matching them. This is computational heavy and is done completly off-chain. The process produces chains of trades involving at least 2 tokens, we call that an \norder ring\n.\n\n\n\n\nLoopring Protocol Smart Contracts\n\n\n\n\nA set of smart contracts that checks ring-matched orders received from the miners, do the token transfers on behalf of the users, incentivize the miners and emit events. The relays/order browsers listen to these events to keep their orderbooks and trade history up to date.\n\n\n\n\nAsset Tokenization Services\n\n\n\n\nA bridge between assets that cannot be directly traded on loopring. They are centralized services ran by trustworthy companies or organisations. A user could deposit his assets (fiat or tokens from other chains) and get tokens issued. By returning the tokens the user get backs his deposit. LRC is not a cross-chain exchange protocol, but with Asset Tokenization Services, it is possible to trade Ethereum ERC20 tokens with physicial assets as well as assets on other blockchains.\n\n\nAsset Tokenization Services is not part of Loopring project though.\n\n\n\n\nOverview\n\n\nThis is the lifecycle of a successful order on the loopring network with an explanation of each step bellow.\n\n\n\n0 - The user wants to make a trade\n\n\n\n\nThe user wants to exchange \nX\n amount of \nTokenA\n for \nY\n amount of \nTokenB\n. The current rate and orderbook for this pair can be found on multiple sources provided by the relays or any other interface hooked up on the network (e.g. orderbook browsers). Once he is ready, he uses his wallet interface to enter the details of his order and submits it. An amount of LRC can be added to the order as a fee for miners. Orders with a higher LRC fee have a better chance to be processed earlier by miners.\n\n\n\n\n1 - ERC20 Authorization\n\n\n\n\nThe wallet authorizes the loopring smart contracts to handle \nX\n amount of the \nTokenA\n the user wants to sell. This does not lock the user's tokens. He is free to move them while the order is being processed by the network. If the sender's balance is being checked at some point (by a miner or the loopring ) and the funds are insufficient, it will be considered scaled-down. A order being scaled-down is not the same as being cancelled, a scaled-down order will be automatically scaled up to its original size if funds sufficient are deposited to its address, while cancellation is a one way manual operation and cannot be revert.\n\n\n\n\n2 - Sending the order to the network\n\n\n\n\nOnce the authorization is made, the order's data is signed with the private key of the sender. Then, the wallet sends the order along with its signature to one or more nodes in the network (relay or ring-miner).\n\n\n\n\n3 - Broadcast\n\n\n\n\nOn the reception of the order, relays update their public orderbook and broadcast the order to other relays as well as ring miners to start the order processing as quickly as possible.\n\n\n\n\n4 - Ring Miners (order matching)\n\n\n\n\nRing Miners receive the order and add it to their orderbook. Each one of them tries to fill it fully or partially at the given exchange rate or better by ring-matching it with multiple other orders. The ring-matching is the main reason why the protocol is able to provide high liquidity over any pair. The details of the process are explained in the \nRing Miners\n page.\nIf the rate is better than the rate the user asked for, the savings are shared amongst all the orders in the ring and is called the Margin Split. For his fee the miner can choose between claiming the Margin Split and give back the LRC to the user or just keep the LRC fee.\n\n\n\n\n5 - Validation \n Settlement\n\n\n\n\nThe ring is received by the loopring protocol contract. It makes multiple checks to verify the miner's supplied datas and determine if the ring can be settled fully or partially (depending on the fill rate of the orders in the ring and the tokens in the users wallets). If all checks are successful, the contract makes the token tranfers to the users (5a) and pays the miner's fees (5b) at the same time. This operation is atomic.\n\n\n\n\nSome details were ommited to ease the understanding of what is happening when an order enters the loopring network. To deepen your understanding of the protocol (order cancelling, ring-matching, orderbooks and trade history synching, etc...) we advise you to take a look at the documentation of the key parts of the ecosystem \nlisted above\n.\n\n\nIssues with centralized exchanges\n\n\nTo better understand the need of a system such as loopring, we first need to point the issues in the centralized exchanges model.\n\n\nHere is a very simplified view of what happens when you send your tokens to a centralized exchange.\n\n\n\n\nIn order to use the exchange and trade your tokens, you first have to deposit your tokens in the exchange. Your tokens are sent to the exchange's wallets and it gives you back an IOU (I owe you), which is a proof of debt. Then you trade your IOU with other users IOUs. Finally when you want to withdraw, you give back your IOU to the exchange which then sends you back your tokens to your external wallet address.\n\n\nLack of Security\n\n\n\n\nIn this model, you don't have control over your tokens. It allows for instant transactions on the exchange but it comes with a lot of risks. There are multiple scenarios where you could loose your money (frozen account, exchange shutting down, hacking, developer's mistakes, etc...).\n\n\n\n\nLack of Transparency\n\n\n\n\nAnything can happen to your tokens when they are on the exchange's wallets. You have no way of knowing what exactly. It is always too late when an exchange goes bankrupt and users never see it coming.\n\n\n\n\nLack of Liquidity\n\n\n\n\nYou are only able to trade with the exchange own order pools and supported token pairs. If there is not enough volume you can try on an other exchange and if the token pair you want to trade is not supported, you could try making indirect trades with other pairs to get what you want or, again, transfer your funds to an other exchange. Either way you get hit multiple times by fees and you loose money.\n\n\n\n\nThere are other challenges faced by centralized exchanges. We won't discuss them all here and we advise you to read the many articles written on the subject across the web.", 
            "title": "Overview"
        }, 
        {
            "location": "/overview/#what-is-loopring", 
            "text": "Loopring is a decentralized token exchange protocol. It is implemented as an ethereum smart-contract at the core of the loopring decentralized exchange system. Its design allows for several improvements over traditional centralized exchanges:   Zero Risks Trading:  The tokens stay in the user's wallet and are never locked by orders.  High liquidity:  Orders are ring-matched allowing for high liquidity on any trading pair.  Fairness:  The fee   discount model allows for fairness between all parties involved (Makers, Takers and Miners).  Weak Supervision:  The whole system is completely decentralised.   You can learn more about the background and general design of the loopring protocol in our  whitepaper .\nBear in mind that as we proceed with the implementation, some details in the whitepaper might become outdated. Whenever there is a difference, please refer to this website as the latest official update.", 
            "title": "What is Loopring"
        }, 
        {
            "location": "/overview/#why", 
            "text": "The loopring protocol was designed to address numerous issues found in centralized exchanges, for a brief explanation checkout the  last section  of this page.", 
            "title": "Why ?"
        }, 
        {
            "location": "/overview/#ecosystem", 
            "text": "This section introduces the key parts of the loopring ecosystem and how they interact with each other. They jointly provide all functionalities a centralized exchange has to offer. For a more in depth explanation of each one of them, follow the links below.  Wallets   A common wallet service/interface that gives you access to your tokens and provides you with a way to send orders to the loopring network.   Relays   Maintains public orderbooks and trade history. Broadcasts new orders to other relays and ring miners.   Ring Miners   Tries to determine a way to fulfill received orders by ring-matching them. This is computational heavy and is done completly off-chain. The process produces chains of trades involving at least 2 tokens, we call that an  order ring .   Loopring Protocol Smart Contracts   A set of smart contracts that checks ring-matched orders received from the miners, do the token transfers on behalf of the users, incentivize the miners and emit events. The relays/order browsers listen to these events to keep their orderbooks and trade history up to date.   Asset Tokenization Services   A bridge between assets that cannot be directly traded on loopring. They are centralized services ran by trustworthy companies or organisations. A user could deposit his assets (fiat or tokens from other chains) and get tokens issued. By returning the tokens the user get backs his deposit. LRC is not a cross-chain exchange protocol, but with Asset Tokenization Services, it is possible to trade Ethereum ERC20 tokens with physicial assets as well as assets on other blockchains.  Asset Tokenization Services is not part of Loopring project though.", 
            "title": "Ecosystem"
        }, 
        {
            "location": "/overview/#overview", 
            "text": "This is the lifecycle of a successful order on the loopring network with an explanation of each step bellow.  0 - The user wants to make a trade   The user wants to exchange  X  amount of  TokenA  for  Y  amount of  TokenB . The current rate and orderbook for this pair can be found on multiple sources provided by the relays or any other interface hooked up on the network (e.g. orderbook browsers). Once he is ready, he uses his wallet interface to enter the details of his order and submits it. An amount of LRC can be added to the order as a fee for miners. Orders with a higher LRC fee have a better chance to be processed earlier by miners.   1 - ERC20 Authorization   The wallet authorizes the loopring smart contracts to handle  X  amount of the  TokenA  the user wants to sell. This does not lock the user's tokens. He is free to move them while the order is being processed by the network. If the sender's balance is being checked at some point (by a miner or the loopring ) and the funds are insufficient, it will be considered scaled-down. A order being scaled-down is not the same as being cancelled, a scaled-down order will be automatically scaled up to its original size if funds sufficient are deposited to its address, while cancellation is a one way manual operation and cannot be revert.   2 - Sending the order to the network   Once the authorization is made, the order's data is signed with the private key of the sender. Then, the wallet sends the order along with its signature to one or more nodes in the network (relay or ring-miner).   3 - Broadcast   On the reception of the order, relays update their public orderbook and broadcast the order to other relays as well as ring miners to start the order processing as quickly as possible.   4 - Ring Miners (order matching)   Ring Miners receive the order and add it to their orderbook. Each one of them tries to fill it fully or partially at the given exchange rate or better by ring-matching it with multiple other orders. The ring-matching is the main reason why the protocol is able to provide high liquidity over any pair. The details of the process are explained in the  Ring Miners  page.\nIf the rate is better than the rate the user asked for, the savings are shared amongst all the orders in the ring and is called the Margin Split. For his fee the miner can choose between claiming the Margin Split and give back the LRC to the user or just keep the LRC fee.   5 - Validation   Settlement   The ring is received by the loopring protocol contract. It makes multiple checks to verify the miner's supplied datas and determine if the ring can be settled fully or partially (depending on the fill rate of the orders in the ring and the tokens in the users wallets). If all checks are successful, the contract makes the token tranfers to the users (5a) and pays the miner's fees (5b) at the same time. This operation is atomic.   Some details were ommited to ease the understanding of what is happening when an order enters the loopring network. To deepen your understanding of the protocol (order cancelling, ring-matching, orderbooks and trade history synching, etc...) we advise you to take a look at the documentation of the key parts of the ecosystem  listed above .", 
            "title": "Overview"
        }, 
        {
            "location": "/overview/#issues-with-centralized-exchanges", 
            "text": "To better understand the need of a system such as loopring, we first need to point the issues in the centralized exchanges model.  Here is a very simplified view of what happens when you send your tokens to a centralized exchange.   In order to use the exchange and trade your tokens, you first have to deposit your tokens in the exchange. Your tokens are sent to the exchange's wallets and it gives you back an IOU (I owe you), which is a proof of debt. Then you trade your IOU with other users IOUs. Finally when you want to withdraw, you give back your IOU to the exchange which then sends you back your tokens to your external wallet address.  Lack of Security   In this model, you don't have control over your tokens. It allows for instant transactions on the exchange but it comes with a lot of risks. There are multiple scenarios where you could loose your money (frozen account, exchange shutting down, hacking, developer's mistakes, etc...).   Lack of Transparency   Anything can happen to your tokens when they are on the exchange's wallets. You have no way of knowing what exactly. It is always too late when an exchange goes bankrupt and users never see it coming.   Lack of Liquidity   You are only able to trade with the exchange own order pools and supported token pairs. If there is not enough volume you can try on an other exchange and if the token pair you want to trade is not supported, you could try making indirect trades with other pairs to get what you want or, again, transfer your funds to an other exchange. Either way you get hit multiple times by fees and you loose money.   There are other challenges faced by centralized exchanges. We won't discuss them all here and we advise you to read the many articles written on the subject across the web.", 
            "title": "Issues with centralized exchanges"
        }, 
        {
            "location": "/token/", 
            "text": "Trend\n\n\n\n\n\n\n\n\nTo learn more about LRC token, checkout \nhttps://etherscan.io/address/lrctoken.eth\n or \n\nhttps://etherscan.io/token/0xEF68e7C694F40c8202821eDF525dE3782458639f\n.\n\n\nCirculating Supply\n\n\nAfter the refunding effort to our Chinese investors, the total circulating supply ratio is 20.5%.\n\n\nThe foundation controls the following addresses:\n\n\n\n\n\n\n\n\nAddress\n\n\nLRC Balance\n\n\n\n\n\n\n\n\n\n\n\n\n0x7B22713f2e818fad945AF5a3618a2814F102cbe0 (icebox)\n\n\n279,015,212\n\n\n\n\n\n\n\n\n0xdFCA9bF60785A5651b4262755cA60d48EFe6E3CF\n\n\n138,768,403\n\n\n\n\n\n\n\n\n0x51018afFFaD06730D5b815486e6d9acE7bA99409\n\n\n106,527,780\n\n\n\n\n\n\n\n\n0x9952F869f12a7af92aB86B275cFa231C868Aad23\n\n\n65,646,211\n\n\n\n\n\n\n\n\n0x473Aa9C129180262fE6EfcA609D60f03B66b9d2e\n\n\n61,673,216\n\n\n\n\n\n\n\n\n0x959c6b8574b779A1E7d709e4966Ec2C8F8ABa4b4\n\n\n54,001,284\n\n\n\n\n\n\n\n\n0x85e64Df825c6397904Fe4A366629112079C64858\n\n\n48,460,979\n\n\n\n\n\n\n\n\n0x1C2bF1A1Cfdf2D2aA401735Da5996F8171C81C5f\n\n\n42,385,206\n\n\n\n\n\n\n\n\n0x81A5c6392c4DBE91fC942FA2010563c88D830Cf4\n\n\n28,505,011\n\n\n\n\n\n\n\n\n0xAD3c895C3678e77884366cD891b0984acd214775\n\n\n11,214,569\n\n\n\n\n\n\n\n\n0xB7bb1E956beF65F22B32b04f230159040Dcb1829\n\n\n1,378,402\n\n\n\n\n\n\n\n\n0x947EE764129AF89B803E43A29083cB9728ab5b9b\n\n\n782,294\n\n\n\n\n\n\n\n\n0xC7e217cEc00ebEf8711935a33b6Cd8aB9906f5FB\n\n\n301,426\n\n\n\n\n\n\n\n\n0x8C86D95881b7392Ce06C1162a230a3974d624D4a\n\n\n2,400\n\n\n\n\n\n\n\n\nSUB-TOTAL\n\n\n838,662,393\n\n\n\n\n\n\n\n\n\n\nThe following addresses contain LRC that are burned by either the foundation or some users (Nobody can transfer these LRC out to another address).\n\n\n\n\n\n\n\n\nAddress\n\n\nLRC Balance\n\n\n\n\n\n\n\n\n\n\n\n\n0x0000000000000000000000000000000000000000 (blackhole)\n\n\n20,000,000\n\n\n\n\n\n\n\n\n0xEF68e7C694F40c8202821eDF525dE3782458639f (LRC-contract)\n\n\n117,776\n\n\n\n\n\n\n\n\nSUB-TOTAL\n\n\n20,117,776\n\n\n\n\n\n\n\n\n\n\nAdditionally, several institute addresses collectively hold about 118,626,980 LRC that are not suppose to circulate within a year. We cannot list these addresses.\n\n\nWe also have two incentive plan addresses. The first one is the mid-term plan whose LRC may be unlock in about a year; the second address is for the long-term plan whose LRC won't be unlocked until 18 months later.\n\n\n\n\n\n\n\n\nAddress\n\n\nLRC Balance\n\n\n\n\n\n\n\n\n\n\n\n\n0x8b34fbc553db3462ad4909f2e5577cc22f63c216 (mid-term)\n\n\n39,261,025\n\n\n\n\n\n\n\n\n0x239dE3a0D6ca5f21601f83327eA2174225eB7156 (long-term)\n\n\n92,237,125\n\n\n\n\n\n\n\n\nSUB-TOTAL\n\n\n131,498,150\n\n\n\n\n\n\n\n\n\n\nPut all these together, we have:\n\n\n\n\n\n\n\n\nAddress Group\n\n\nLRC Balance\n\n\nPercentage\n\n\n\n\n\n\n\n\n\n\n\n\nFoundation\n\n\n838,662,393\n\n\n60.1%\n\n\n\n\n\n\n\n\nBurned\n\n\n20,117,776\n\n\n1.4%\n\n\n\n\n\n\n\n\nInstitute Investors\n\n\n118,626,980\n\n\n8.5%\n\n\n\n\n\n\n\n\nIncentive Plans\n\n\n131,498,150\n\n\n9.4%\n\n\n\n\n\n\n\n\nCirculating Supply\n\n\n286,170,755.5238\n\n\n20.5%\n\n\n\n\n\n\n\n\nTotal Supply\n\n\n1,395,076,054.5238\n\n\n100.0%\n\n\n\n\n\n\n\n\n\n\nPlease note:\n\n\n\n\nLoopring foundation are determined to reward a considerable portion of LRC tokens to developers, partners, and community contributors, the circulating supply will increase overtime. \n\n\nAll the above numbers are collected and calculated on Sept 25th, 2017 and may not be updated in time to reflect the facts when you read this document.", 
            "title": "LRC Token"
        }, 
        {
            "location": "/token/#trend", 
            "text": "To learn more about LRC token, checkout  https://etherscan.io/address/lrctoken.eth  or  https://etherscan.io/token/0xEF68e7C694F40c8202821eDF525dE3782458639f .", 
            "title": "Trend"
        }, 
        {
            "location": "/token/#circulating-supply", 
            "text": "After the refunding effort to our Chinese investors, the total circulating supply ratio is 20.5%.  The foundation controls the following addresses:     Address  LRC Balance       0x7B22713f2e818fad945AF5a3618a2814F102cbe0 (icebox)  279,015,212     0xdFCA9bF60785A5651b4262755cA60d48EFe6E3CF  138,768,403     0x51018afFFaD06730D5b815486e6d9acE7bA99409  106,527,780     0x9952F869f12a7af92aB86B275cFa231C868Aad23  65,646,211     0x473Aa9C129180262fE6EfcA609D60f03B66b9d2e  61,673,216     0x959c6b8574b779A1E7d709e4966Ec2C8F8ABa4b4  54,001,284     0x85e64Df825c6397904Fe4A366629112079C64858  48,460,979     0x1C2bF1A1Cfdf2D2aA401735Da5996F8171C81C5f  42,385,206     0x81A5c6392c4DBE91fC942FA2010563c88D830Cf4  28,505,011     0xAD3c895C3678e77884366cD891b0984acd214775  11,214,569     0xB7bb1E956beF65F22B32b04f230159040Dcb1829  1,378,402     0x947EE764129AF89B803E43A29083cB9728ab5b9b  782,294     0xC7e217cEc00ebEf8711935a33b6Cd8aB9906f5FB  301,426     0x8C86D95881b7392Ce06C1162a230a3974d624D4a  2,400     SUB-TOTAL  838,662,393      The following addresses contain LRC that are burned by either the foundation or some users (Nobody can transfer these LRC out to another address).     Address  LRC Balance       0x0000000000000000000000000000000000000000 (blackhole)  20,000,000     0xEF68e7C694F40c8202821eDF525dE3782458639f (LRC-contract)  117,776     SUB-TOTAL  20,117,776      Additionally, several institute addresses collectively hold about 118,626,980 LRC that are not suppose to circulate within a year. We cannot list these addresses.  We also have two incentive plan addresses. The first one is the mid-term plan whose LRC may be unlock in about a year; the second address is for the long-term plan whose LRC won't be unlocked until 18 months later.     Address  LRC Balance       0x8b34fbc553db3462ad4909f2e5577cc22f63c216 (mid-term)  39,261,025     0x239dE3a0D6ca5f21601f83327eA2174225eB7156 (long-term)  92,237,125     SUB-TOTAL  131,498,150      Put all these together, we have:     Address Group  LRC Balance  Percentage       Foundation  838,662,393  60.1%     Burned  20,117,776  1.4%     Institute Investors  118,626,980  8.5%     Incentive Plans  131,498,150  9.4%     Circulating Supply  286,170,755.5238  20.5%     Total Supply  1,395,076,054.5238  100.0%      Please note:   Loopring foundation are determined to reward a considerable portion of LRC tokens to developers, partners, and community contributors, the circulating supply will increase overtime.   All the above numbers are collected and calculated on Sept 25th, 2017 and may not be updated in time to reflect the facts when you read this document.", 
            "title": "Circulating Supply"
        }, 
        {
            "location": "/projects/protocol/", 
            "text": "The loopring smart contracts\n\n\n(A rework is being made)\n\n\nLoopring Protocol (the Protocol) is a Ethereum smart-contract. It is the core of Loopring ecosystem and offers the following functionalites:\n\n\n\n\n\n\nComputing each order's current state\n\n\nWhen orders are propagated off-chain, they never mutate, which means even when they are partially filled or cancelled, in the peer-to-peer network, different parties still see the same exact orders - otherwise orders need to be re-signed each time they get partially filled or cancelled. The protocol will verify the order's signature against its original state and compute order's current state based on the order's fill history, cancellation records, and its corresponding outgoing address's balance as well ERC20 allowance. All future matching and price/fee calculation is based on order's current states.\n\n\n\n\n\n\nVerifying Miner-supplied Values\n\n\nBecause of the lack of float number computing capalibity, Loopring demands ring-miners to calculate the amount of token each order should pay to the next/previous order in the ring. The protocol shall verify these amounts as well as fees to be collected by miners are calculated correctly. Price and fee calculation deserve a detailed articulation, thus they have their own dedicated sections below.\n\n\n\n\n\n\nTransfering Tokens for Settlement\n\n\nThe protocol will transfer ERC20 tokens between order addresses by using the \nTokenTransferDelegate\n. The introduction of such a delegate makes upgrading Loopring protocol easier as all orders only need to authorize this delegate instead of different versions of the protocol.\n\n\n\n\n\n\nCancel or Partially Cancel Orders\n\n\nOrders can be cancelled by invoking the \ncancelOrder\n protocol method. The other way to pseudo-cancel an order is to move all funds into a different address from the one the order's signed by. We may need to provide a batchCancelOrder method in next version.\n\n\n\n\n\n\nMaitaining Fill History and Emit Events\n\n\nIn order to compute each order's current state, the protocol keeps track of each order's total filled amount and cancelled, aka fill/cancellation-records. The protocol also emit \nOrderFilled\n, \nOrderCancelled\n, and \nRingMined\n events. These events can be used by relays to provide consolidated trading data to wallet users.\n\n\n\n\n\n\nLoopring protocol is open-source at github: \nhttps://github.com/Loopring/protocol\n. We are still working on its very first release.\n\n\nOrder Rings\n\n\nsupersimmetry {\nda447m@yahoo.com\n} came up with this \u300a\nRemarks on Loopring\n\u300b document to explain what order-rings (match-ring) are, when orders can form a valid ring to be filled, and how fill rates are calculated. We really appreciate such an effort and it is worth of a reading. Please be noted in current protocol implementation, the pricing model is the same as in our whitepaper and the above document, but the fee model is different.\n\n\nWhen impelmented in solidity, Loopring protocol doesn't perform calculating exchange rate or amount, but perform verification of miner-supplied exchange amount for each order (specificily, how much each order should pay to the previous order in the ring). This is beause 1) solidity doens't have support for float number computation, especially \npow(x, 1/n)\n, and 2) we prefer math computation to be done by miners to save gas.\n\n\nExchange Rate Verification\n\n\nBelow we are going to describe how rate related verification is done.\n\n\n(TODO)\n\n\nFee Model\n\n\nOur \nwhitepaper\n elaberated a possible income source for ring-miners called \"margin split\" or 'split'. The nice thing about split is that ring-miners' interests and order submitters' interests are aligned - the more ring-miners help save order submitter's cost, the more the ring-miners will gain as income.\n\n\nBut in situations where the actually exchange rates in a ring are exactly the same as each order's original rates, the margin is zero thus the split is also zero, therefore ring-miners are not incentivized to submit such a ring as they have no income at all. With the introduction of LRC token, we allow order submitter to specify the amount of LRC to be paid to miners as mining fee. This mining fee is paid proportionally if an order is partially filled.\n\n\nThe innovative part of our fee model is as follows: we only allow ring-miners to choose either LRC fee or split, additionally, if ring-miners choose split, they must pay back the same amount of LRC back to order submitter as specifed.\n\n\nLets say a order specified 10LRC as fee, assume this order is fully filled and split is 10S (S is the selling token), the miner either collect 10LRC as fee, or collect 10S and pays 10LRC to order submitter.\n\n\nIf \nf\n is LRC fee, \nx\n is the split, then miner's income is \ny = max(f, x-f)\n. If we plot this function, we have:\n\n\n\n\nThe Rationals\n\n\nThe orange line represents the split fee model, and the blue line represents our current fee model. As you can see:\n\n\n\n\nif split is 0, miners will choose \nf\n so they still get a constant income, therefore they are certainly incentivized.\n\n\nif \nf\n, the LRC fee is zero, \ny = max(f, x-f)\n becomes \ny = x\n, this is exactly the fee model without LRC involved. So our fee model is just a genelized model.\n\n\nif split's value is equal to or greater than twice the value of LRC fee, miner will choose \nx-f\n.\n\n\n\n\n(TODO)", 
            "title": "Protocol"
        }, 
        {
            "location": "/projects/protocol/#the-loopring-smart-contracts", 
            "text": "(A rework is being made)  Loopring Protocol (the Protocol) is a Ethereum smart-contract. It is the core of Loopring ecosystem and offers the following functionalites:    Computing each order's current state  When orders are propagated off-chain, they never mutate, which means even when they are partially filled or cancelled, in the peer-to-peer network, different parties still see the same exact orders - otherwise orders need to be re-signed each time they get partially filled or cancelled. The protocol will verify the order's signature against its original state and compute order's current state based on the order's fill history, cancellation records, and its corresponding outgoing address's balance as well ERC20 allowance. All future matching and price/fee calculation is based on order's current states.    Verifying Miner-supplied Values  Because of the lack of float number computing capalibity, Loopring demands ring-miners to calculate the amount of token each order should pay to the next/previous order in the ring. The protocol shall verify these amounts as well as fees to be collected by miners are calculated correctly. Price and fee calculation deserve a detailed articulation, thus they have their own dedicated sections below.    Transfering Tokens for Settlement  The protocol will transfer ERC20 tokens between order addresses by using the  TokenTransferDelegate . The introduction of such a delegate makes upgrading Loopring protocol easier as all orders only need to authorize this delegate instead of different versions of the protocol.    Cancel or Partially Cancel Orders  Orders can be cancelled by invoking the  cancelOrder  protocol method. The other way to pseudo-cancel an order is to move all funds into a different address from the one the order's signed by. We may need to provide a batchCancelOrder method in next version.    Maitaining Fill History and Emit Events  In order to compute each order's current state, the protocol keeps track of each order's total filled amount and cancelled, aka fill/cancellation-records. The protocol also emit  OrderFilled ,  OrderCancelled , and  RingMined  events. These events can be used by relays to provide consolidated trading data to wallet users.    Loopring protocol is open-source at github:  https://github.com/Loopring/protocol . We are still working on its very first release.", 
            "title": "The loopring smart contracts"
        }, 
        {
            "location": "/projects/protocol/#order-rings", 
            "text": "supersimmetry { da447m@yahoo.com } came up with this \u300a Remarks on Loopring \u300b document to explain what order-rings (match-ring) are, when orders can form a valid ring to be filled, and how fill rates are calculated. We really appreciate such an effort and it is worth of a reading. Please be noted in current protocol implementation, the pricing model is the same as in our whitepaper and the above document, but the fee model is different.  When impelmented in solidity, Loopring protocol doesn't perform calculating exchange rate or amount, but perform verification of miner-supplied exchange amount for each order (specificily, how much each order should pay to the previous order in the ring). This is beause 1) solidity doens't have support for float number computation, especially  pow(x, 1/n) , and 2) we prefer math computation to be done by miners to save gas.", 
            "title": "Order Rings"
        }, 
        {
            "location": "/projects/protocol/#exchange-rate-verification", 
            "text": "Below we are going to describe how rate related verification is done.  (TODO)", 
            "title": "Exchange Rate Verification"
        }, 
        {
            "location": "/projects/protocol/#fee-model", 
            "text": "Our  whitepaper  elaberated a possible income source for ring-miners called \"margin split\" or 'split'. The nice thing about split is that ring-miners' interests and order submitters' interests are aligned - the more ring-miners help save order submitter's cost, the more the ring-miners will gain as income.  But in situations where the actually exchange rates in a ring are exactly the same as each order's original rates, the margin is zero thus the split is also zero, therefore ring-miners are not incentivized to submit such a ring as they have no income at all. With the introduction of LRC token, we allow order submitter to specify the amount of LRC to be paid to miners as mining fee. This mining fee is paid proportionally if an order is partially filled.  The innovative part of our fee model is as follows: we only allow ring-miners to choose either LRC fee or split, additionally, if ring-miners choose split, they must pay back the same amount of LRC back to order submitter as specifed.  Lets say a order specified 10LRC as fee, assume this order is fully filled and split is 10S (S is the selling token), the miner either collect 10LRC as fee, or collect 10S and pays 10LRC to order submitter.  If  f  is LRC fee,  x  is the split, then miner's income is  y = max(f, x-f) . If we plot this function, we have:", 
            "title": "Fee Model"
        }, 
        {
            "location": "/projects/protocol/#the-rationals", 
            "text": "The orange line represents the split fee model, and the blue line represents our current fee model. As you can see:   if split is 0, miners will choose  f  so they still get a constant income, therefore they are certainly incentivized.  if  f , the LRC fee is zero,  y = max(f, x-f)  becomes  y = x , this is exactly the fee model without LRC involved. So our fee model is just a genelized model.  if split's value is equal to or greater than twice the value of LRC fee, miner will choose  x-f .   (TODO)", 
            "title": "The Rationals"
        }, 
        {
            "location": "/projects/relay/", 
            "text": "Relays", 
            "title": "Relays"
        }, 
        {
            "location": "/projects/relay/#relays", 
            "text": "", 
            "title": "Relays"
        }, 
        {
            "location": "/projects/ringminer/", 
            "text": "Ring Miners\n\n\nIn construction.", 
            "title": "Ring Miners"
        }, 
        {
            "location": "/projects/ringminer/#ring-miners", 
            "text": "In construction.", 
            "title": "Ring Miners"
        }, 
        {
            "location": "/projects/wallet/", 
            "text": "Wallets\n\n\nIn construction.", 
            "title": "Wallets"
        }, 
        {
            "location": "/projects/wallet/#wallets", 
            "text": "In construction.", 
            "title": "Wallets"
        }, 
        {
            "location": "/projects/tokenization/", 
            "text": "Asset Tokenization Services\n\n\nIn construction.", 
            "title": "Tokenization Services"
        }, 
        {
            "location": "/projects/tokenization/#asset-tokenization-services", 
            "text": "In construction.", 
            "title": "Asset Tokenization Services"
        }, 
        {
            "location": "/contribution/", 
            "text": "Contribution\n\n\nHow to contribute\n\n\nWe use \nSlack\n to communicate with each other. Feel free join in our slack channels:\n\n\n\n\nLoopring Announcement (read-only)\n\n\nLoopring Community (English)\n\n\nLoopring Contributors\n\n\n\n\nYou may want to talk to Daniel Wang (\ndaniel@loopring.org\n), Loopring CEO and major developer, about your idea and the way you can help. This is not a prerequisite, however, you can create pull requests at anytime.\n\n\nOur Git Branching Model\n\n\nFor git repositories that have releases (this one not included), we will adopt \n\"A Successful Git Branching Model\"\n starting from Nov. 1st, 2017.\n\n\n\n\nContributors\n\n\nIf your pull requests are ever accepted and merged, please create a pull request to put yoruself in this list.\n\n\n\n\nFei YUAN -  Reviewed LRC token smart-contract and created an important pull request.", 
            "title": "Contribution"
        }, 
        {
            "location": "/contribution/#contribution", 
            "text": "", 
            "title": "Contribution"
        }, 
        {
            "location": "/contribution/#how-to-contribute", 
            "text": "We use  Slack  to communicate with each other. Feel free join in our slack channels:   Loopring Announcement (read-only)  Loopring Community (English)  Loopring Contributors   You may want to talk to Daniel Wang ( daniel@loopring.org ), Loopring CEO and major developer, about your idea and the way you can help. This is not a prerequisite, however, you can create pull requests at anytime.", 
            "title": "How to contribute"
        }, 
        {
            "location": "/contribution/#our-git-branching-model", 
            "text": "For git repositories that have releases (this one not included), we will adopt  \"A Successful Git Branching Model\"  starting from Nov. 1st, 2017.", 
            "title": "Our Git Branching Model"
        }, 
        {
            "location": "/contribution/#contributors", 
            "text": "If your pull requests are ever accepted and merged, please create a pull request to put yoruself in this list.   Fei YUAN -  Reviewed LRC token smart-contract and created an important pull request.", 
            "title": "Contributors"
        }
    ]
}